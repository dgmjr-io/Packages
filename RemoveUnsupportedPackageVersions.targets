<!--
 * RemoveUnsupportedPackageVersions.targets
 *
 *   Created: 2023-02-25-01:41:22
 *   Modified: 2023-02-25-01:41:31
 *
 *   Author: David G. Moore, Jr. <david@dgmjr.io>
 *
 *   Copyright Â© 2022-2023 David G. Moore, Jr., All Rights Reserved
 *      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project>
  <PropertyGroup>
    <RestoreDependsOn>
      $(RestoreDependsOn);
      RemoveUnsupportedPackageVersions;
    </RestoreDependsOn>
  </PropertyGroup>

  <Target Name="DisplayImportedPackageReferences" BeforeTargets="GetPackageContents;Restore;Pack">
    <Message Text="Imported package references: @(PackageReference->'%(Identity) (%(Version))')" />
  </Target>

  <Target Name="RemoveUnsupportedPackageVersions" BeforeTargets="GetPackageContents;Restore;CollectPackageReferences">
    <Message Text="Removing unsupported package versions!" />
    <ItemGroup>
      <!-- Create a list of unsupported package references -->
      <PackageReferenceWithUnsupportedOrBlankVersion Include="@(PackageReference)" Condition="'%(PackageReference.Version)' == '' Or '%(PackageReference.Version)' == 'unsupported'" />
      <!-- Remove the unsupported package references -->
      <PackageReference Remove="%(Identity)" Condition="'%(PackageReference.Version)' == '' Or '%(PackageReference.Version)' == 'unsupported'" />
    </ItemGroup>
    <Warning Text="Packages with unsupported or blank versions being removed: @(PackageReferenceWithUnsupportedOrBlankVersion)" Condition="@(PackageReferenceWithUnsupportedOrBlankVersion->Count()) > 0"/>
  </Target>
</Project>
